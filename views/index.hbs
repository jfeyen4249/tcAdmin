<!DOCTYPE html>
<html lang="en">
<head>
    <style>
        /* You may adjust these values as needed */
        .w-85 {
            width: 75%;
        }

        .h-70 {
            height: 75%;
        }
        #modal {
            align-items: center;
            justify-content: center;
        }

        .modal-btn {
            position: absolute;
            left: 50%;
            transform: translate(45%);
        }

        .ql-editor {
            min-height: 96px;
            max-height: 150px;
            overflow-y: auto;
        }

        .ql-editor {
            margin-bottom: 10px;
        }

        .w-half {
            width: 50%;
        }

        .h-half {
            height: 400px;
        }

        .chart-title {
            font-weight: 600;
            font-size: 30px;
            text-decoration: underline;
            margin-bottom: 5px;
        }

        .chart-height {
            height: 600px;
        }

        .move {
            margin-left: -30px;
        }

    </style>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="apple-touch-icon" sizes="180x180" href="../fav/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="../fav/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="../fav/favicon-16x16.png">
    <link rel="manifest" href="../fav/site.webmanifest">
    <link rel="mask-icon" href="../fav/safari-pinned-tab.svg" color="#5bbad5">
    <meta name="msapplication-TileColor" content="#da532c">
    <meta name="theme-color" content="#ffffff">

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
   <script defer src=".././menu.js"></script>
    <script src="https://cdn.tailwindcss.com"></script>
    <title>TC Admin - Dashboard</title>
    <link rel="icon" type="image/png" sizes="32x32" href="../fav/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="../fav/favicon-16x16.png">

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/alertifyjs/build/css/alertify.min.css"/>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/alertifyjs/build/css/themes/default.min.css"/>
    <script src="https://cdn.jsdelivr.net/npm/alertifyjs/build/alertify.min.js"></script>
    <script>

        function showAlertSuccess(text) {
            alertify.set('notifier','delay', 6);
            alertify.set('notifier','position', 'top-center');
            alertify.success(text);
        }
        function showalertwarning(text) {
            alertify.set('notifier','delay', 6);
            alertify.set('notifier','position', 'top-center');
            alertify.error(text);
        }
    </script>
</head>
<body class="bg-slate-800 h-screen flex">

    <!-- Left Side Menu -->
    <div class="w-1/6 bg-slate-950 text-white p-4 text-center">
        <img src="../img/tc-logo.png" style="width: 90%; height: auto; margin-bottom: 20px; padding: 1rem;">
        <ul id="menu">
            
        </ul>
    </div>


    <!-- Main Content -->
<div class="flex-1 p-8">
   <div class="max-w-full w-full min-h-full bg-white p-8">
     <div class="relative h-[80vh] overflow-y-auto">
    <div class="flex items-center justify-between mb-4">
        <!-- Password Manager Passwords text -->
        <h1 class="text-2xl font-bold mb-4">Dashboard</h1>

        <!-- Search Box and Add New Password Button Container -->
        <div class="flex items-center">
            <!-- Search Box -->
            <div class="flex items-center">
                {{!-- <input type="text" id="search" placeholder="Search..." class="bg-gray-100 border border-gray-300 px-4 py-2 rounded-l-md focus:outline-none focus:ring-blue-500 focus:border-blue-500"> --}}
            </div>
        </div> 
    </div>

    <div class="container mx-auto p-4 mt-8 bg-white min-h-full" id="app">
        <!-- First Half -->
        <div class="w-half h-half float-left border rounded-lg p-2 move">
            <table class="w-full border-collapse border rounded-md border-gray-800">
                <h1 class="text-center chart-title">Chromebook Out For Repair</h1>
                <h3 id="chromebookRepairHeader" class="text-center font-bold">Total: </h3>
                <canvas id="chromebookChart1" class="w-2 h-2 mb-20"></canvas>
            </table>
        </div>

        <!-- Second Half -->
        <div class="w-half h-half float-right border rounded-lg p-2">
            <h1 class="text-center chart-title">Upcoming Renewals</h1>
            <div class="relative overflow-y-auto">
                <table class="w-full border-collapse border border-gray-800">
                    <thead>
                        <tr class="bg-gray-800 text-white">
                            <th class="py-2 px-4 border">Service</th>
                            <th class="py-2 px-4 border">Renewal Date</th>
                            <th class="py-2 px-4 border">Cost</th>
                        </tr>
                    </thead>
                    <tbody class="text-center" id="renew-table">
                    
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Third Half -->
        <div class="w-half h-half float-left border rounded-lg p-2 move mt-8">
    <h1 class="text-center chart-title">Performance Center</h1>
    <div class="relative overflow-y-auto" style="max-height: 350px;">
        <table class="w-full border-collapse border border-gray-800">
            <thead>
                <tr class="bg-gray-800 text-white">
                    <th class="py-2 px-4 border">Name</th>
                    <th class="py-2 px-4 border">Hard Drive</th>
                    <th class="py-2 px-4 border">Ram</th>
                </tr>
            </thead>
            <tbody class="text-center" id="pc-table">
                <!-- Table rows go here -->
            </tbody>
        </table>
    </div>
</div>


        <!-- Fourth Half -->
        <div class="w-half h-half float-right border rounded-lg p-2 mt-8">
            <h1 class="text-center chart-title">Down Devices</h1>
            <div class="relative overflow-y-auto">
                <table class="w-full border-collapse border border-gray-800">
                    <thead>
                        <tr class="bg-gray-800 text-white">
                            <th class="py-2 px-4 border">Device</th>
                            <th class="py-2 px-4 border">Down Time</th>
                        </tr>
                    </thead>
                    <tbody class="text-center" id="device-table">
                    
                    </tbody>
                </table>
            </div>
        </div>
        
        <div class="clearfix"></div> <!-- Add clearfix to clear floats -->
    </div>
</div>

</div>

    <!-- JavaScript to toggle submenus and close them on outside click -->
    <script>
        async function fetchTotalRepairs() {
            let repairHeader = document.getElementById("chromebookRepairHeader");
            try {
                const totalRepairs = await fetch(`/chromebook/getAllRepairs`);
                const data = await totalRepairs.json();
                repairHeader.innerText += " " + data.allRepairs;
            }  catch (error) {
                //console.log('Error fetching data:', error);
            }
        }

        async function fetchSchoolNames() {
            try {
                const schoolNames = await fetch(`/chromebook/getSchoolNames`);
                const data = await schoolNames.json();
                return data;
            } catch(error) {
                console.error('Error fetching data:', error);
            }
        }
        
        async function fetchRepairTotal(schoolName) {
            let repairs = [];
            try {
                    schoolName = schoolName.replaceAll(" ", "*");
                    const total = await fetch(`/chromebook/getRepairsBySchool/?school=${schoolName}`);
                    return await total.json();
            } catch(error) {
                //console.error('Error fetching data:',error);
            }
        }

        document.addEventListener("DOMContentLoaded", async function () {
           await updateRepairs();
        });

        async function updateRepairs() {
            // Fetch data for Chromebook repairs
            await fetchTotalRepairs()
            const schoolNames = await fetchSchoolNames();
            const schoolRepairTotals = []
            for(let i = 0; i < schoolNames.length; i++) {
                schoolRepairTotals.push(await fetchRepairTotal(schoolNames[i]));
            }

            // Create second doughnut chart
            var ctx2 = document.getElementById('chromebookChart1').getContext('2d');
            var chromebookChart2 = new Chart(ctx2, {
                type: 'doughnut',
                data: {
                    labels: schoolNames,
                    datasets: [{
                        label: 'Chromebook Repairs',
                        data: schoolRepairTotals,
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false
                }
            });
        }

         let getRenewals = () => {
            document.getElementById('renew-table').innerHTML = '';
            fetch(`/renew/upcoming/`)
                .then(response => response.json())
                .then(data => {
                    data.forEach(obj => {
                        //console.log(data)
                        let row = `
                            <tr>
                                <td class="py-2 px-4 border">${obj.service}</td>
                                <td class="py-2 px-4 border">${obj.renewal_date}</td>
                                <td class="py-2 px-4 border">$${obj.cost}</td>                               
                            </tr>`;
                        document.getElementById('renew-table').innerHTML += row;
                    });
                });
        };
         
    let getDownDevices = () => {
    document.getElementById('device-table').innerHTML = '';
    fetch(`/settings/down-devices`)
        .then(response => response.json())
        .then(data => {
            //console.log(data); // Log the data to inspect its structure
            if (Array.isArray(data)) {
                data.forEach(obj => {
                    let row = `
                        <tr>
                            <td class="py-2 px-4 border">${obj.name}</td>
                            <td class="py-2 px-4 border">${obj.down_time}</td>                        
                        </tr>`;
                    document.getElementById('device-table').innerHTML += row;
                });
            } else if (typeof data === 'object' && data !== null) {
                let row = `
                    <tr>
                        <td class="py-2 px-4 border">${data.name}</td>
                        <td class="py-2 px-4 border">${data.down_time}</td>                        
                    </tr>`;
                document.getElementById('device-table').innerHTML += row;
            } else {
                console.error('Unexpected response format:', data);
            }
        })
        .catch(error => {
            console.error('Error fetching down devices:', error);
        });
};

        let getComputer = () => {
            function calc(data) {
                const [totalSpace, usedSpace] = data.split('/').map(Number);
                const usedPercentage = (usedSpace / totalSpace) * 100
                return usedPercentage.toFixed(2)
            }

            document.getElementById('pc-table').innerHTML = '';
            fetch(`/desktop/dashboard`)
                .then(response => response.json())
                .then(data => {
                    data.forEach(obj => {
                        //console.log(data)
                        let row = `
                            <tr>
                                <td class="py-2 px-4 border">${obj.name}</td>
                                <td class="py-2 px-4 border">${calc(obj.hdd)}% Used</td>
                                <td class="py-2 px-4 border">${calc(obj.ram)}% Used</td>                               
                            </tr>`;
                        document.getElementById('pc-table').innerHTML += row;
                    });
                });
        };


        getRenewals()
        getComputer()
        getDownDevices()
    </script>
</body>
</html>
