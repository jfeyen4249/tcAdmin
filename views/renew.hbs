<!DOCTYPE html>
<html lang="en">
<head>
    <style>
        /* You may adjust these values as needed */
        .w-85 {
            width: 35%;
        }

        .h-70 {
            height: 30%;
        }
        {{!-- #modal {
            align-items: center;
            justify-content: center;
        } --}}

        .modal-btn {
            position: absolute;
            left: 50%;
            transform: translate(45%);
        }

        .delete {
            height: 150px;
            width: 400px;
        }

        .renew {
            margin-top: -200px;
            width: 350px;
        }

    </style>

    <link rel="apple-touch-icon" sizes="180x180" href="../fav/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="../fav/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="../fav/favicon-16x16.png">
    <link rel="manifest" href="../fav/site.webmanifest">
    <link rel="mask-icon" href="../fav/safari-pinned-tab.svg" color="#5bbad5">
    <meta name="msapplication-TileColor" content="#da532c">
    <meta name="theme-color" content="#ffffff">

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <script defer src=".././menu.js"></script>
    <script src="https://cdn.tailwindcss.com"></script>
    <title>TC Admin - Renewals</title>
    <link rel="icon" type="image/png" sizes="32x32" href="../fav/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="../fav/favicon-16x16.png">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/alertifyjs/build/css/alertify.min.css"/>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/alertifyjs/build/css/themes/default.min.css"/>
    <script src="https://cdn.jsdelivr.net/npm/alertifyjs/build/alertify.min.js"></script>
    <script>

        function showAlertSuccess(text) {
            alertify.set('notifier','delay', 6);
            alertify.set('notifier','position', 'top-center');
            alertify.success(text);
        }
        function showalertwarning(text) {
            alertify.set('notifier','delay', 6);
            alertify.set('notifier','position', 'top-center');
            alertify.error(text);
        }
    </script>
</head>
<body class="bg-slate-800 h-screen flex">

    <!-- Left Side Menu -->
    <div class="w-1/6 bg-slate-950 text-white p-4 text-center">
        <img src="../img/tc-logo.png" style="width: 90%; height: auto; margin-bottom: 20px; padding: 1rem;">
        <ul id="menu">
            
        </ul>
    </div>

    <!-- Main Content -->
    <div class="flex-1 p-8">
       <div class="max-w-full w-full bg-white p-8 rounded shadow-md">
    <div class="flex items-center justify-between mb-4">
        <!-- Password Manager Passwords text -->
        <h1 class="text-2xl font-bold mb-4">Renewal Center</h1>

        <!-- Search Box and Add New Password Button Container -->
        <div class="flex items-center">
            <!-- Search Box -->
            <div class="flex items-center">
                <input type="text" id="search" oninput="search()" placeholder="Search..." class="bg-gray-100 border border-gray-300 px-4 py-2 rounded-l-md focus:outline-none focus:ring-blue-500 focus:border-blue-500">
            </div>
            
            <!-- Add New Password Button -->
            <button class="bg-blue-500 text-white px-4 py-2 rounded-md ml-4" onclick="openModal('0')"><i class="fa-solid fa-plus"></i> Add</button>
            <input type="file" name="" id="upload" hidden>
            <button class="bg-green-500 text-white px-4 py-2 rounded-md ml-4" id="renewbtn" onclick="openRenew()"><i class="fa-solid fa-rotate-right"></i> Renew</button>
            <button class="bg-red-500 text-white px-4 py-2 rounded-md ml-4" id="delete" onclick="openDelete()"><i class="fa-solid fa-trash-can"></i> Delete</button>
            <button class="bg-orange-500 text-white px-4 py-2 rounded-md ml-4" id="history" onclick="openChart()"><i class="fa-solid fa-chart-line"></i> History</button>
        </div>
    </div>

    <!-- Table -->
    
    <div class="relative h-[70vh] overflow-y-auto">
    <table class="w-full border-collapse border border-gray-800">
        <thead>
            <tr class="bg-gray-800 text-white">
                <th class="py-2 px-4 border">Service</th>
                <th class="py-2 px-4 border">Company</th>
                <th class="py-2 px-4 border">Contact</th>
                <th class="py-2 px-4 border">Start Date</th>
                <th class="py-2 px-4 border">Renewal Date</th>
                <th class="py-2 px-4 border">Cost</th>
                <th class="py-2 px-4 border">PO Number</th>
            </tr>
        </thead>
        <tbody class="text-center" id="renew-table">
           
        </tbody>
    </table>
    </div>
    <div class="w-full text-right mt-4" id="pageBTN">
        <button id="prevButton" data-page="0" class="bg-gray-800 text-white py-2 px-4 rounded hover:bg-gray-700">Previous</button>
        <span id="pageIndicator">Page 1</span>
        <button id="nextButton" data-page="2" class="bg-gray-800 text-white py-2 px-4 rounded hover:bg-gray-700">Next</button>
    </div>

</div>

 
    <!-- Modal -->
    <div id="modal" class="fixed top-0 left-0 w-full h-full flex items-center justify-center bg-gray-800 bg-opacity-50 hidden" onclick="event.stopPropagation()">
    <div class="relative bg-white rounded shadow-md flex flex-col mt-[-5vh] overflow-y-auto"  style="max-height: 100vh;">
        <div class="grid grid-cols-1 flex-grow">
            <div class="col-span-1 bg-white p-8 rounded-l">
               
                    <!-- Website/Service -->
                    <div class="mb-4">
                        <label for="student-name" class="block text-gray-600 text-sm font-medium mb-2">Service</label>
                        <input type="text" id="service" name="student-name" class="w-full px-3 py-2 border rounded-md focus:outline-none focus:border-blue-500" > 
                    </div>
                    
                    <div class="mb-4">
                        <label for="company" class="block text-gray-600 text-sm font-medium mb-2">Company</label>
                        <input type="text" id="company" name="company" class="w-full px-3 py-2 border rounded-md focus:outline-none focus:border-blue-500" >
                    </div>
                   
                    <div class="mb-4">
                        <label for="contact" class="block text-gray-600 text-sm font-medium mb-2">Contact</label>
                        <input type="text" id="contact" name="contact" class="w-full px-3 py-2 border rounded-md focus:outline-none focus:border-blue-500" >
                    </div>
                   
                   
                    <div class="mb-4">
                        <label for="grad-year" class="block text-gray-600 text-sm font-medium mb-2">Starting Date  (format: 12-25-2024)</label>
                        <input type="text" id="start" name="grad-year" class="w-full px-3 py-2 border rounded-md focus:outline-none focus:border-blue-500" >
                    </div>

                    <div class="mb-4">
                        <label for="grad-year" class="block text-gray-600 text-sm font-medium mb-2">Next Renewal (format: 12-25-2024)</label>
                        <input type="text" id="renew" name="grad-year" class="w-full px-3 py-2 border rounded-md focus:outline-none focus:border-blue-500" >
                    </div>
                   
                    <div class="mb-4">
                        <label for="grad-year" class="block text-gray-600 text-sm font-medium mb-2">Cost</label>
                        <input type="text" id="cost" name="grad-year" class="w-full px-3 py-2 border rounded-md focus:outline-none focus:border-blue-500" >
                    </div>
                   
                    <div class="mb-4">
                        <label for="grad-year" class="block text-gray-600 text-sm font-medium mb-2">PO Number</label>
                        <input type="text" id="po" name="grad-year" class="w-full px-3 py-2 border rounded-md focus:outline-none focus:border-blue-500" >
                    </div>
                <button type="button" id="add" class="w-full bg-green-500 text-white p-2 rounded-md hover:bg-green-700 mb-4 mt-2 hidden" onclick="AddRenewal()">Add Renewal</button>
                <button type="button" id="edit" class="w-full bg-green-500 text-white p-2 rounded-md hover:bg-green-700 mb-4 mt-2 hidden" onclick="EditRenewal()">Update Renewal</button>
            </div>
        </div>
        <button class="absolute top-4 right-4 text-gray-600" onclick="closeModal()">
            <i class="fas fa-times"></i>
        </button>
    </div>
</div>


<div id="history-modal" class="fixed top-0 left-0 w-full h-full flex items-center justify-center bg-gray-800 bg-opacity-50 hidden" onclick="event.stopPropagation()">
    <div class="relative bg-white rounded shadow-md flex flex-col">
        <div class="grid grid-cols-1 flex-grow">
            <div class="col-span-1 bg-white p-8 rounded-l">
                <div class="mb-4">
                        <label for="modal-make" class="block text-gray-600 text-sm font-medium mb-2">Select a service</label>
                        <select name="modal-make" id="history-select" oninput="updateChart()" class="w-full px-3 py-2 border rounded-md focus:outline-none focus:border-blue-500">
                        </select>
                </div>
                <canvas id="myChart" width="1000" height="600"></canvas>
            </div>
        </div>
        <button class="absolute top-4 right-4 text-gray-600" onclick="closeChart()">
            <i class="fas fa-times"></i>
        </button>
    </div>
</div>


<div id="delete-modal" class="fixed top-0 left-0 w-full h-full flex items-center justify-center bg-gray-800 bg-opacity-50 hidden" onclick="event.stopPropagation()">
    <div class="relative bg-white rounded shadow-md flex flex-col delete">
        <div class="grid grid-cols-1 flex-grow">
            <div class="col-span-1 bg-white p-8 rounded-l">
                <div class="mb-4">
                        <label for="modal-make" class="block text-gray-600 text-sm font-medium mb-2">Select a service</label>
                        <select name="modal-make" id="delete-select" class="w-full px-3 py-2 border rounded-md focus:outline-none focus:border-blue-500">
                        </select>
                </div>
                 <button type="button" id="add" class="w-full bg-red-500 text-white p-2 rounded-md hover:bg-green-700 mb-4 mt-2" onclick="DeleteRenewal()">Delete Service</button>

            </div>
        </div>
        <button class="absolute top-4 right-4 text-gray-600" onclick="closeDelete()">
            <i class="fas fa-times"></i>
        </button>
    </div>
</div>

<div id="renew-modal" class="fixed top-0 left-0 w-full h-full flex items-center justify-center bg-gray-800 bg-opacity-50 hidden" onclick="event.stopPropagation()">
    <div class="relative bg-white rounded shadow-md flex flex-col renew">
        <div class="grid grid-cols-1 flex-grow">
            <div class="col-span-1 bg-white p-8 rounded-l">
                <div class="mb-4">
                        <label for="modal-make" class="block text-gray-600 text-sm font-medium mb-2">Select a service</label>
                        <select name="modal-make" id="renew-select" class="w-full px-3 py-2 border rounded-md focus:outline-none focus:border-blue-500">
                        </select>
                </div>

                 <div class="mb-4">
                    <label for="grad-year" class="block text-gray-600 text-sm font-medium mb-2">Renewal Cost</label>
                    <input type="text" id="renew-cost" name="grad-year" class="w-full px-3 py-2 border rounded-md focus:outline-none focus:border-blue-500" >
                </div>
                 
                <div class="mb-4">
                    <label for="grad-year" class="block text-gray-600 text-sm font-medium mb-2">Expiration Date</label>
                    <input type="text" id="renew-date" name="grad-year" class="w-full px-3 py-2 border rounded-md focus:outline-none focus:border-blue-500" >
                </div>
                
                <div class="mb-4">
                    <label for="grad-year" class="block text-gray-600 text-sm font-medium mb-2">PO Number</label>
                    <input type="text" id="renew-po" name="grad-year" class="w-full px-3 py-2 border rounded-md focus:outline-none focus:border-blue-500" >
                </div>

                 <button type="button" id="add" class="w-full bg-green-500 text-white p-2 rounded-md hover:bg-green-700 mb-4 mt-2" onclick="Renew()">Renew Service</button>
            </div>
        </div>
        <button class="absolute top-4 right-4 text-gray-600" onclick="closeRenew()">
            <i class="fas fa-times"></i>
        </button>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


    <script defer> 
        let editid = 0;
        let renewTable = document.getElementById('renew-table')
        let modal = document.getElementById('modal')
        let service = document.getElementById('service')
        let company = document.getElementById('company')
        let contact = document.getElementById('contact')
        let start = document.getElementById('start')
        let renew = document.getElementById('renew')
        let cost = document.getElementById('cost')
        let po = document.getElementById('po')
        let addBTN = document.getElementById('add')
        let editBTN = document.getElementById('edit')

        let historyModal = document.getElementById('history-modal')
        let historyService = document.getElementById('history-select')


        let deletemodal = document.getElementById('delete-modal')
        let deleteService = document.getElementById('delete-select')

        let renewmodal = document.getElementById('renew-modal')
        let renewService = document.getElementById('renew-select')
        let renewCost = document.getElementById('renew-cost')
        let renewPO = document.getElementById('renew-po')
        let Expdate = document.getElementById('renew-date')

        let currentPage = 1;
        const limit = 30; 

        function getRenewals(page = 1) {
            renewTable.innerHTML = ''
            deleteService.innerHTML = ''
            deleteService.innerHTML = '<option value="">Select a Service</option>'
            renewService.innerHTML = ''
            renewService.innerHTML = '<option value="">Select a Service</option>'
            historyService.innerHTML = ''
            historyService.innerHTML = `<option value="">Select a Service</option>`
            fetch(`/renew/list/?page=${page}&limit=${limit}`)
                .then(response => response.json())
                .then(data => {
                    console.log(data)
                    for(let i=0; i<data.length; i++) {
                        let obj = data[i];
                       let row = `
                            <tr class="hover:bg-blue-400" onclick="openModal('${obj.id}')">
                                <td class="py-2 px-4 border">${obj.service}</td>
                                <td class="py-2 px-4 border">${obj.company}</td>
                                <td class="py-2 px-4 border">${obj.contact}</td>
                                <td class="py-2 px-4 border">${obj.start}</td>
                                <td class="py-2 px-4 border">${obj.renewal_date}</td>
                                <td class="py-2 px-4 border">$${obj.cost}</td>
                                <td class="py-2 px-4 border">${obj.po}</td>
                            </tr>`;
                        renewTable.innerHTML += row
                        historyService.innerHTML += `<option value="${obj.service}">${obj.service}</option>`
                        deleteService.innerHTML += `<option value="${obj.id}">${obj.service}</option>`
                        renewService.innerHTML += `<option value="${obj.id}">${obj.service}</option>`
                    }

                });
            currentPage = page;
            document.getElementById('pageIndicator').innerText = `Page ${currentPage}`;
        }

        document.getElementById('prevButton').addEventListener('click', () => {
            if (currentPage > 1) getRenewals(currentPage - 1);
        });

        document.getElementById('nextButton').addEventListener('click', () => {
            getRenewals(currentPage + 1); // You might want to check here if there are still more data
        });

        function openModal(id) {
            if(id == 0) {
                modal.classList.remove("hidden")
                addBTN.classList.remove('hidden')
            } else {
                modal.classList.remove("hidden")
                editBTN.classList.remove('hidden')
                editid = id
                fetch(`/renew/service/?id=${editid}`)
                .then(response => response.json())
                .then(data => {
                        let obj = data[0];
                        service.value = obj.service
                        start.value = obj.start
                        company.value = obj.company
                        contact.value = obj.contact
                        renew.value = obj.renewal_date
                        cost.value = obj.cost
                        po.value = obj.po
                });
            }
        }
        
        function openDelete() {
            deletemodal.classList.remove('hidden')
        }

        function closeDelete() {
            deletemodal.classList.add('hidden')
            getRenewals(1)
        }
       
        function openRenew() {
            renewmodal.classList.remove('hidden')
            let year = new Date().getFullYear()
            let month = new Date().getMonth()
            let day = new Date().getDate()
            Expdate.value = `${month < 10 ? '0' : ''}${month}-${day < 10 ? '0' : ''}${day}-${year + 1}`
        }

        function closeRenew() {
            renewmodal.classList.add('hidden')
            getRenewals(1)
        }

        function closeModal() {
            if(editid == 0) {
                modal.classList.add("hidden")
                addBTN.classList.add('hidden')
                service.value = ''
                start.value = ''
                renew.value = ''
                cost.value = ''
                po.value = ''
            } else {
                editid = 0
                modal.classList.add("hidden")
                editBTN.classList.add('hidden')
                service.value = ''
                start.value = ''
                renew.value = ''
                cost.value = ''
                po.value = ''
            }
        }
         
        function AddRenewal() {
            let data = {
                    service : service.value,
                    company : company.value,
                    contact : contact.value,
                    start : start.value,
                    renewal_date: renew.value,
                    cost: cost.value,
                    year : year,
                    po: po.value,
                }
                
                fetch(`/renew/service`, {
                method: 'Put',
                body : JSON.stringify(data),
                headers: {
                    "Content-Type": "application/json",
                    }
                })
                .then(response => response.text())
                .then(data => {
                    if(data == 'added') {
                        closeModal()
                        getRenewals()
                    }
                });
        }

        function EditRenewal() {
            let data = {
                     service : service.value,
                    company : company.value,
                    contact : contact.value,
                    start : start.value,
                    renewal_date: renew.value,
                    cost: cost.value,
                    year : year,
                    po: po.value,
                }
                
                fetch(`/renew/service?id=${editid}`, {
                method: 'Post',
                body : JSON.stringify(data),
                headers: {
                    "Content-Type": "application/json",
                    }
                })
                .then(response => response.text())
                .then(data => {
                    if(data == 'added') {
                        closeModal()
                        getRenewals()
                    }
                });
        }

        function Renew() {
            let data = {
                    id : renewService.value,
                    cost: renewCost.value,
                    po: renewPO.value,
                    date: Expdate.value
                }
                
                fetch(`/renew/renew`, {
                method: 'Post',
                body : JSON.stringify(data),
                headers: {
                    "Content-Type": "application/json",
                    }
                })
                .then(response => response.text())
                .then(data => {
                    if(data == 'renewed') {
                         renewTable.innerHTML = ''
                        closeRenew()
                    }
                });
        }

        function DeleteRenewal() {
             var answer = prompt(`Do you want to delete ${deleteService.options[deleteService.selectedIndex ].text}? (yes/no)`);
            if (answer === "yes") {
                fetch(`/renew/service?id=${deleteService.value}`, {method : 'delete'})
                .then(response => response.text())
                .then(data => {
                    if(data == 'deleted') {

                        closeDelete()
                    }
                });
            } else if (answer === "no") {

            } else {

            }
        }

        async function fetchData() {
            clearChart()
            try {
                const response = await fetch(`/renew/history?service=${historyService.value}`);
                const data = await response.json();
                return data;
            } catch (error) {
                console.error('Error fetching data:', error);
            }
        }

        async function updateChart() {

            const data = await fetchData();
            const labels = data.map(item => item.year);
            const values = data.map(item => item.cost);

            const config = {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Cost',
                        data: values,
                        fill: false,
                        borderColor: 'rgb(75, 192, 192)',
                        tension: 0.1
                    }]
                },
                options: {}
            };

            var myChart = new Chart(
                document.getElementById('myChart'),
                config
            );
        }

        // Call the updateChart function when the modal is opened
        function openChart() {
            historyModal.classList.remove('hidden')
            console.log('Clicked')
        }

        // Call the closeModal function to destroy the chart when the modal is closed
        function clearChart() {
            var chart = Chart.getChart('myChart');
            if (chart) {
                chart.destroy();
            }
        }

        function closeChart() {
            var chart = Chart.getChart('myChart');
            if (chart) {
                chart.destroy();
            }
            historyModal.classList.add('hidden')
        }

        function search(){
            if(document.getElementById('search').value.length > 1) {

              renewTable.innerHTML = '';
                fetch(`/renew/search?search=${document.getElementById('search').value}`,{method : 'get'})
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(obj => {
                             let row = `
                            <tr class="hover:bg-blue-400" onclick="openModal('${obj.id}')">
                                <td class="py-2 px-4 border">${obj.service}</td>
                                <td class="py-2 px-4 border">${obj.start}</td>
                                <td class="py-2 px-4 border">${obj.company}</td>
                                <td class="py-2 px-4 border">${obj.contact}</td>
                                <td class="py-2 px-4 border">${obj.renewal_date}</td>
                                <td class="py-2 px-4 border">$${obj.cost}</td>
                                <td class="py-2 px-4 border">${obj.po}</td>
                            </tr>`;
                        renewTable.innerHTML += row
                        });
                    });
            } else {
                getRenewals(1)
            }
        }
 
        document.getElementById('upload').addEventListener('change', function(event) {
            const file = event.target.files[0];
            const reader = new FileReader();

            reader.onload = function(e) {
                const lines = e.target.result.split('\n');
                lines.forEach(function(line) {
                    //console.log(line); 
                    let data = {student : line.split(',')[0] + " " + line.split(',')[1], year : line.split(',')[2].slice(0, 4)}
                    fetch(`/students/student/`,{method: 'Put', body : JSON.stringify(data), headers: { "Content-Type": "application/json"},})
                        .then(response => response.text())
                        .then(data => {console.log(data)});
                });
            }
            reader.readAsText(file);
            
        });
    
        getRenewals(1)
    </script>

</body>
</html>
