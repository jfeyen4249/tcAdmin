<!DOCTYPE html>
<html lang="en">
<head>
    <style>
        /* You may adjust these values as needed */
        .w-85 {
            width: 75%;
        }

        .h-70 {
            height: 20%;
        }

        .add-h {
            height: 50%;
        }


        #modal {
            align-items: center;
            justify-content: center;
        }

        .modal-btn {
            position: absolute;
            left: 50%;
            transform: translate(45%);
        }

        .ql-editor {
            min-height: 96px;
            max-height: 150px;
            overflow-y: auto;
        }

        .ql-editor {
            margin-bottom: 10px;
        }

        .hidden {
            display: none;
        }
    </style>

    <link rel="apple-touch-icon" sizes="180x180" href="../fav/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="../fav/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="../fav/favicon-16x16.png">
    <link rel="manifest" href="../fav/site.webmanifest">
    <link rel="mask-icon" href="../fav/safari-pinned-tab.svg" color="#5bbad5">
    <meta name="msapplication-TileColor" content="#da532c">
    <meta name="theme-color" content="#ffffff">

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
     <script defer src=".././menu.js"></script>
    <script src="https://cdn.tailwindcss.com"></script>
    <title>Wifi Passwords</title>
    <link rel="icon" type="image/png" sizes="32x32" href="../fav/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="../fav/favicon-16x16.png">
</head>
<body class="bg-slate-800 h-screen flex">

    <!-- Left Side Menu -->
    <div class="w-1/6 bg-slate-950 text-white p-4 text-center">
        <img src="../img/tc-logo.png" style="width: 90%; height: auto; margin-bottom: 20px; padding: 1rem;">
        <ul id="menu">
            
        </ul>
    </div>

    <!-- Main Content -->
    <div class="flex-1 p-8">
       <div class="max-w-full w-full bg-white p-8 rounded shadow-md">
    <div class="flex items-center justify-between mb-4">
        <!-- Password Manager Passwords text -->
        <h1 class="text-2xl font-bold mb-4">Wifi Passwords</h1>

        <!-- Search Box and Add New Password Button Container -->
        <div class="flex items-center">
            <!-- Search Box -->
            <div class="flex items-center">
                <input type="text" id="search" placeholder="Search..." class="bg-gray-100 border border-gray-300 px-4 py-2 rounded-l-md focus:outline-none focus:ring-blue-500 focus:border-blue-500">
            </div>
            
            <!-- Add New Password Button -->
            <button class="bg-blue-500 text-white px-4 py-2 rounded-md ml-4" onclick="addModalOpen()"><i class="fa-solid fa-plus"></i> Add</button>
        </div>
    </div>

    <!-- Table -->
    <table class="w-full border-collapse border border-gray-800" >
        
        <div class="grid grid-cols-3 gap-4 mt-3 w-full text-center" id="wifi-grid">
                
            </div>
    </table>
</div>
 

    <!-- Modal -->
    <div id="modal" class="fixed top-0 left-0 w-full h-full flex items-center justify-center bg-gray-800 bg-opacity-50 hidden" onclick="event.stopPropagation()">
    <div class="relative w-85 h-70 bg-white rounded shadow-md flex flex-col">
        <div class="grid grid-cols-1 flex-grow">
            <div id="showpass">
                <div class="col-span-1 bg-white p-8 rounded-l text-center">
                <h1 class="text-center text-4xl" id="wifi-ssid"></h1>
                <hr><br>
                <h3 id="wifi-pass" class="text-red-500 text-3xl"></h3><br>
                    
                    <div class="text-center">
                        <button class="bg-red-500 text-white px-4 py-2 rounded-md mb-4 mt-4 w-half" onclick="closeModal()">Close</button>
                    </div>
                </div>                                 
            </div>
        </div>
    </div>
</div>


<div id="addmodal" class="fixed top-0 left-0 w-full h-full flex items-center justify-center bg-gray-800 bg-opacity-50 hidden" onclick="event.stopPropagation()">
    <div class="relative w-85 add-h bg-white rounded shadow-md flex flex-col">
            <h1 class="text-center text-2xl" >Add Wifi Password</h1>
                <hr><br>
        <div class="grid grid-cols-1 flex-grow">
             <div>
                <div class="col-span-1 bg-white p-8 rounded-l text-center">
                
                <div class="mb-4">
                        <label for="modal-ssid" class="block text-gray-600 text-sm font-medium mb-2">SSID Name</label>
                        <input type="text" id="modal-ssid" name="modal-ssid" class="w-full px-3 py-2 border rounded-md focus:outline-none focus:border-blue-500" >
                    </div>

                    <div class="mb-4">
                        <label for="modal-pass" class="block text-gray-600 text-sm font-medium mb-2">Password</label>
                        <input type="text" id="modal-pass" name="modal-pass" class="w-full px-3 py-2 border rounded-md focus:outline-none focus:border-blue-500" >
                    </div>
                    <div class="text-center">
                        <button class="bg-blue-500 text-white px-4 py-2 rounded-md mb-4 mt-4 w-half hidden" onclick="editwifi()" id="modal-edit">Update</button>
                        <button class="bg-green-500 text-white px-4 py-2 rounded-md mb-4 mt-4 w-half" onclick="addwifi()" id="modal-save">Save</button>
                        <button class="bg-red-500 text-white px-4 py-2 rounded-md mb-4 mt-4 w-half" onclick="closeAddModal()">Close</button>
                    </div>
                </div>                                 
            </div>
        </div>
    </div>
</div>

     <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
    <script src="https://unpkg.com/quill-html-edit-button@2.2.7/dist/quill.htmlEditButton.min.js"></script>
    
    <script defer>
        const modal = document.getElementById('modal')
        const addModal = document.getElementById('addmodal')
        let ssidName = document.getElementById('modal-ssid')
        let password = document.getElementById('modal-pass')
        let wifissid = document.getElementById('wifi-ssid')
        let wifipass = document.getElementById('wifi-pass')
        let saveBTN = document.getElementById('modal-save')
        let editBTN = document.getElementById('modal-edit')
        let editID = 0

        function getWifi() {
           document.getElementById('wifi-grid').innerHTML = '';
            fetch('/wifi/list')
                .then(response => response.json())
                .then(data => {
                    //console.log(data); // Check the structure of the response
                    if (Array.isArray(data)) { // Check if data is an array
                        data.forEach(obj => {
                            document.getElementById('wifi-grid').innerHTML += `
                                <div class="bg-gray-200 p-4 rounded-md" id="wifi-grid">
                                    <h2 class="text-lg font-semibold mb-2">${obj.ssid}</h2>
                                    <p></p>
                                    <button class="bg-red-500 text-white px-4 py-2 rounded-md mb-4 mt-4" onclick="openEditModal('${obj.id}')"><i class="fa-solid fa-eye"></i> Edit Password</button>
                                    <button class="bg-green-500 text-white px-4 py-2 rounded-md mb-4 mt-4" onclick="openModal('${obj.id}')"><i class="fa-solid fa-eye"></i> View Password</button>
                                </div>
                            `;
                        });
                    } else {
                        console.error("Data is not an array:", data);
                        // Handle the case where data is not an array, possibly show an error message
                    }
                })
                .catch(error => {
                    console.error('Error fetching WiFi list:', error);
                    // Handle errors from the fetch request
                });
        }

        function openModal(id) {
            console.log(id)
            modal.style.display = 'flex'
            fetch(`/wifi/password/?id=${id}`)
            .then(response => response.json())
            .then(data => {

                wifissid.innerText = data[0].ssid
                wifipass.innerText = data[0].password
            })
        }

        function openEditModal(id) {
            editID = id
            addmodal.style.display = 'flex'
            saveBTN.style.display = 'none'
            editBTN.style.display = 'inline'
            //console.log(id)
            fetch(`/wifi/password/?id=${id}`)
            .then(response => response.json())
            .then(data => {
                ssidName.value = data[0].ssid
                password.value = data[0].password
            })
        }

        function closeModal() {
            modal.style.display = 'none' 
        }

        function closeAddModal() {
            addModal.style.display = 'none'
            wifipass.value = ''
            wifissid.value = ''
            editID = 0
        }

        function addModalOpen() {
            addmodal.style.display = 'flex'
            modal.style.display = 'none'
            saveBTN.style.display = 'inline'
            editBTN.style.display = 'none'
        }

        function addwifi() {
            let data ={
               ssid : ssidName.value,
               wifipassword : password.value
            }
            
            fetch(`/wifi/add`,{
                method: 'Post',
                body : JSON.stringify(data),
                headers: {
                    "Content-Type": "application/json",
                    },
            })
                    .then(response => response.text())
                    .then(data => {
                        if(data == 'added') {
                            closeAddModal()
                            getWifi()
                        } else {
                            alert('Error adding Wifi password!')
                        }
                    });
        }

        function editwifi() {
            let data ={
            id:editID,
               ssid : ssidName.value,
               wifipassword : password.value
            }
            
            fetch(`/wifi/edit`,{
                method: 'Post',
                body : JSON.stringify(data),
                headers: {
                    "Content-Type": "application/json",
                    },
            })
                    .then(response => response.text())
                    .then(data => {
                        if(data == 'added') {
                            closeAddModal()
                            getWifi()
                        } else {
                            alert('Error adding Wifi password!')
                        }
                    });
        }
        
        getWifi()
    </script>

</body>
</html>
